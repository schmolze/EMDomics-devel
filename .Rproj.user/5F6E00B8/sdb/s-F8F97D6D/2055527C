{
    "contents" : "#' @export\n#' @title Plot null distribution of permuted EMD scores vs. calculated EMD\n#' scores.\n#' @description The median of the randomly permuted EMD scores (i.e. the null\n#' distribution) is plotted on the x-axis, vs. the observed EMD scores on the\n#' y-axis. The line \\code{y=x} is superimposed.\n#' @param emdobj An \\code{\\link{EMDomics}} object, typically returned via a call\n#' to \\code{\\link{calculate_emd}}.\n#' @return A \\code{\\link[ggplot2]{ggplot}} object is returned. If the value is\n#' not assigned, a plot will be drawn.\n#' @examples\n#' # 100 genes, 100 samples\n#' dat <- matrix(rnorm(10000), nrow=100, ncol=100)\n#' rownames(dat) <- paste(\"gene\", 1:100, sep=\"\")\n#' colnames(dat) <- paste(\"sample\", 1:100, sep=\"\")\n#'\n#' # \"group A\" = first 50, \"group B\" = second 50\n#' groups <- c(rep(\"A\",50),rep(\"B\",50))\n#' names(groups) <- colnames(dat)\n#'\n#' results <- calculate_emd(dat, groups, nperm=10, parallel=FALSE)\n#' plot_emdnull(results)\n#' @seealso \\code{\\link{calculate_emd}} \\code{\\link[ggplot2]{ggplot}}\nplot_emdnull <- function(emdobj) {\n\n  emd <- emdobj$emd\n  emd.perm <- emdobj$emd.perm\n  rms <- rowMedians(emd.perm)\n\n  data <- as.data.frame(cbind(emd[,\"emd\",drop=FALSE], rms))\n\n  title <- \"Null distribution vs. observed emd scores\"\n\n  ggplot(data, aes(rms, emd)) + geom_point(alpha=0.3) +\n    geom_segment(x=0, y=0, xend=10, yend=10, colour=\"red\") +\n    xlab(\"median of permuted emd scores\")  +\n    ylab(\"observed emd scores\") +\n    ggtitle(title) +\n    theme(axis.text=element_text(size=20),\n          axis.title=element_text(size=24),\n          plot.title =element_text(size=24))\n\n}\n\n\n#' @export\n#' @title Plot histogram of EMD scores calculated via random permutation.\n#' @description The permuted EMD scores stored in \\code{emdobj$emd.perm} are\n#' plotted as a histogram.\n#' @param emdobj An \\code{\\link{EMDomics}} object, typically returned via a call\n#' to \\code{\\link{calculate_emd}}.\n#' @return A \\code{\\link[ggplot2]{ggplot}} object is returned. If the value is\n#' not assigned, a plot will be drawn.\n#' @examples\n#' # 100 genes, 100 samples\n#' dat <- matrix(rnorm(10000), nrow=100, ncol=100)\n#' rownames(dat) <- paste(\"gene\", 1:100, sep=\"\")\n#' colnames(dat) <- paste(\"sample\", 1:100, sep=\"\")\n#'\n#' # \"A\": first 50 samples; \"B\": next 30 samples; \"C\": final 20 samples\n#' outcomes <- c(rep(\"A\",50), rep(\"B\",30), rep(\"C\",20))\n#' names(outcomes) <- colnames(dat)\n#' \n#' results <- calculate_emd(dat, outcomes, nperm=10, parallel=FALSE)\n#' plot_perms(results)\n#' @seealso \\code{\\link{calculate_emd}} \\code{\\link[ggplot2]{ggplot}}\nplot_perms <- function(emdobj) {\n\n  emd.perm <- as.data.frame(emdobj$emd.perm)\n\n  # to appease CRAN\n  x <- NULL\n\n  colnames(emd.perm) <- \"x\"\n\n  title <- \"Histogram of permuted emd scores\"\n\n  ggplot(emd.perm, aes(x)) + geom_histogram(alpha=0.7) +\n    xlab(\"emd score\")  + ggtitle(title) +\n    theme(axis.text=element_text(size=20),\n          axis.title=element_text(size=24),\n          plot.title =element_text(size=24))\n\n}\n\n\n#' @export\n#' @title Plot distributions and EMD score for a gene.\n#' @description The data for the specified gene is retrieved from\n#' \\code{emdobj$data}. \\code{outcomes} is used to divide the data into \n#' distributions for each group, which are then visualized as\n#' density distributions. The calculated EMD score for the specified gene is\n#' displayed in the plot title.\n#' @param emdobj An \\code{\\link{EMDomics}} object, typically returned via a call\n#' to \\code{\\link{calculate_emd}}.\n#' @param gene_name The gene to visualize. The name should be defined as a row\n#' name in \\code{emdobj$emd}.\n#' @return A \\code{\\link[ggplot2]{ggplot}} object is returned. If the value is\n#' not assigned, a plot will be drawn.\n#' @examples\n#' # 100 genes, 100 samples\n#' dat <- matrix(rnorm(10000), nrow=100, ncol=100)\n#' rownames(dat) <- paste(\"gene\", 1:100, sep=\"\")\n#' colnames(dat) <- paste(\"sample\", 1:100, sep=\"\")\n#'\n#' # \"A\": first 50 samples; \"B\": next 30 samples; \"C\": final 20 samples\n#' outcomes <- c(rep(\"A\",50), rep(\"B\",30), rep(\"C\",20))\n#' names(outcomes) <- colnames(dat)\n#' \n#' results <- calculate_emd(dat, outcomes, nperm=10, parallel=FALSE)\n#' plot_density(results, \"gene5\")\n#' \n#' @seealso \\code{\\link{calculate_emd}} \\code{\\link[ggplot2]{ggplot}}\nplot_density <- function(emdobj, gene_name) {\n\n  data <- emdobj$data\n  outcomes <- emdobj$outcomes\n  classes <- unique(outcomes)\n  \n  emd_score <- emdobj$emd[gene_name, \"emd\"]\n  gene.data <- data[gene_name,]\n  \n  # to appease CRAN\n  group <- NULL\n  exp <- NULL\n  \n  df<-data.frame(row.names=colnames(data), group=outcomes, exp=gene.data)\n\n  title <- paste(gene_name, \"\\n\", \"(emd score = \",\n                 round(emd_score, 2), \")\", sep=\"\")\n\n  ggplot(df, aes(exp, fill=group)) + geom_density(alpha=0.5) +\n    xlab(\"data\")  + ggtitle(title) +\n    theme(axis.text=element_text(size=20),\n          axis.title=element_text(size=24),\n          plot.title =element_text(size=24),\n          legend.text = element_text(size = 24),\n          legend.title = element_text(size=24))\n}\n",
    "created" : 1435775665294.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3698111180",
    "id" : "2055527C",
    "lastKnownWriteTime" : 1435778479,
    "path" : "~/EMDomics-devel/R/plots.R",
    "project_path" : "R/plots.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}